/*
   Ajax is a way to communicate with a server from a web page. Data can be sent or recieved by using 
   an Ajax request object, and a webpage can even be update real-time using Ajax. By using Ajax, websites 
   are able to save user data and provide dynamic feedback from databases on whatever server they are working from.
*/

// Step 1: Create a request object

var xhttp = new XMLHttpRequest();


// Step 2: Create a request
// two kinds of methods, get or post. Get or Give.

xhttp.open(method, url, async, user, psw);


// Step 3: Send request
// if its a post method, put a string of whatever you want to send in the save function.

xhttp.send()


/* According to w3schools.com
   Use POST when:
   A cached file is not an option (update a file or database on the server).
   Sending a large amount of data to the server (POST has no size limitations).
   Sending user input (which can contain unknown characters), POST is more robust and secure than GET.
*/


// If you want to add a header to the request 

xhttp.setRequestHeader("Content-type", "application/json");


// JSON object example:

var jsonObject = {"firstName": "Kyle, "lastName": "Gardner", "age": 23}


// Get the Response

xhttp.onreadystatechange = function() {
  if (this.readystate == 4 && this.status == 200) {
    // do what you want with the data (this.responseText or this.responseXML)
  }
}


// EXAMPLE:

function getStuff() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      document.getElementById("stuff").innerHTML = this.responseText;
    }
  };
  xhttp.open("GET", "stuffController/getStuff", true);
  xhttp.send();
}


function givestuff() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      console.log(this.statusText);
    }
  };
  xhttp.setRequestHeader("Content-type", "application/json");
  xhttp.open("POST", "stuffController/giveStuff", true);
  xhttp.send(this.jsonObject);
}
